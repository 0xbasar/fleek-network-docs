"use strict";(self.webpackChunkdocta=self.webpackChunkdocta||[]).push([[7948],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=s(r),d=a,f=u["".concat(c,".").concat(d)]||u[d]||m[d]||o;return r?n.createElement(f,l(l({ref:t},p),{},{components:r})):n.createElement(f,l({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3872:(e,t,r)=>{r.d(t,{Z:()=>a});var n=r(7294);const a=e=>{let{image:t,name:r,title:a,url:o,communityMember:l=!1}=e;return n.createElement("section",{className:"author_card"},n.createElement("div",null,n.createElement("span",{className:"avatar"},n.createElement("a",{href:o,target:"_blank",alt:r},n.createElement("img",{src:t,alt:r}))),n.createElement("div",null,n.createElement("span",{className:"name"},n.createElement("a",{href:o,target:"_blank",alt:r},r)),n.createElement("span",{className:"title"},a),n.createElement("span",{className:"discord"},l?"Join our community on":"Got questions? Find us on"," ",n.createElement("a",{href:"https://discord.gg/fleekxyz",target:"_blank"},"discord!")))))}},9287:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>c,toc:()=>p});var n=r(7462),a=(r(7294),r(3905)),o=r(3872);const l={title:"Ports",hide_title:!0,tags:["Ports"],sidebarCollapsible:!1},i=void 0,c={unversionedId:"learn/ports",id:"learn/ports",title:"Ports",description:"The Node process requires the following ports:",source:"@site/docs/learn/ports.md",sourceDirName:"learn",slug:"/learn/ports",permalink:"/docs/learn/ports",draft:!1,tags:[{label:"Ports",permalink:"/docs/tags/ports"}],version:"current",frontMatter:{title:"Ports",hide_title:!0,tags:["Ports"],sidebarCollapsible:!1}},s={},p=[],u={toc:p},m="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The Node process requires the following ports:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"RPC (port 4069)"),(0,a.kt)("li",{parentName:"ul"},"Narwhal",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Primary (port 8000)"),(0,a.kt)("li",{parentName:"ul"},"Worker (port 8001)"),(0,a.kt)("li",{parentName:"ul"},"Mempool (port 8002)")))),(0,a.kt)("p",null,"There\u2019s a single worker at the protocol level. In the future, if a node is allowed to run >1 worker, the ports can look like (worker#X):"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Narwhal",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Worker (port 80X1)"),(0,a.kt)("li",{parentName:"ul"},"Mempool (or 80X2)")))),(0,a.kt)("admonition",{title:"required",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"The ports should be freed before launching the node process. Any blockers or firewalls should be configured to enable the ports.")),(0,a.kt)(o.Z,{name:"Helder Oliveira",image:"https://github.com/heldrida.png",title:"Software Developer + DX",url:"https://github.com/heldrida",mdxType:"Author"}))}d.isMDXComponent=!0}}]);
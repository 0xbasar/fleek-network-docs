"use strict";(self.webpackChunkdocta=self.webpackChunkdocta||[]).push([[4063],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>h});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(r),m=o,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||a;return r?n.createElement(h,i(i({ref:t},u),{},{components:r})):n.createElement(h,i({ref:t},u))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7906:(e,t,r)=>{r.d(t,{ZP:()=>i});var n=r(7462),o=(r(7294),r(3905));const a={toc:[]};function i(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},a,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Amongst other resources, ports play the role of managing and organizing network traffic. The ports initiate and terminate network connections crucial for the node to operate in the Fleek Network. The operating system should have the ports enabled and open for the node to run successfully."),(0,o.kt)("p",null,"The Node process requires the following ports:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"RPC (port 4069)"),(0,o.kt)("li",{parentName:"ul"},"Pool (4200)"),(0,o.kt)("li",{parentName:"ul"},"Handshake (6969)"),(0,o.kt)("li",{parentName:"ul"},"Narwhal",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Primary (port 18000)"),(0,o.kt)("li",{parentName:"ul"},"Worker (port 18101)"),(0,o.kt)("li",{parentName:"ul"},"Mempool (port 18102)")))),(0,o.kt)("p",null,"There\u2019s a single worker at the protocol level. In the future, if a node is allowed to run >1 worker, the ports can look like (worker#X):"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Narwhal",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Worker (port 18X01)"),(0,o.kt)("li",{parentName:"ul"},"Mempool (or 18X02)")))),(0,o.kt)("admonition",{title:"required",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"The ports should be freed before launching the node process. Any blockers or firewalls should be configured to enable the ports.")))}i.isMDXComponent=!0},3872:(e,t,r)=>{r.d(t,{Z:()=>o});var n=r(7294);const o=e=>{let{image:t,name:r,title:o,url:a}=e;return n.createElement("section",{className:"author_card"},n.createElement("div",null,n.createElement("span",{className:"avatar"},n.createElement("a",{href:a,target:"_blank",alt:r},n.createElement("img",{src:t,alt:r}))),n.createElement("div",null,n.createElement("span",{className:"name"},n.createElement("a",{href:a,target:"_blank",alt:r},r)),n.createElement("span",{className:"title"},o),n.createElement("span",{className:"discord"},"Got questions? Find us on ",n.createElement("a",{href:"https://discord.gg/fleekxyz",target:"_blank"},"Discord!")))))}},7159:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>p,toc:()=>c});var n=r(7462),o=(r(7294),r(3905)),a=r(3872),i=r(7906);const l={title:"Requirements",hide_title:!0,tags:["requirements","server"],sidebarCollapsible:!1},s=void 0,p={unversionedId:"node/requirements",id:"node/requirements",title:"Requirements",description:"\x3c!--",source:"@site/docs/node/requirements.md",sourceDirName:"node",slug:"/node/requirements",permalink:"/docs/node/requirements",draft:!1,tags:[{label:"requirements",permalink:"/docs/tags/requirements"},{label:"server",permalink:"/docs/tags/server"}],version:"current",frontMatter:{title:"Requirements",hide_title:!0,tags:["requirements","server"],sidebarCollapsible:!1},sidebar:"docs",previous:{title:"Overview",permalink:"/docs/node/overview"},next:{title:"Testnet onboarding",permalink:"/docs/node/testnet-onboarding"}},u={},c=[{value:"Requirements",id:"requirements",level:2},{value:"Server",id:"server",level:2},{value:"Ports",id:"ports",level:2},{value:"Specs",id:"specs",level:2}],d={toc:c};function m(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"requirements"},"Requirements"),(0,o.kt)("p",null,"This section provides the requirements for the server specifications on which the Fleek Network Node can be installed and run."),(0,o.kt)("admonition",{title:"warning",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Only 64-bits distributions are supported. Do not try to install it on a 32-bits operating system!")),(0,o.kt)("h2",{id:"server"},"Server"),(0,o.kt)("hr",null),(0,o.kt)("p",null,"The Fleek Network node binary is only supported by a Linux server. Currently, we are only providing support for the following distros:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Debian"),(0,o.kt)("li",{parentName:"ul"},"Ubuntu")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Support for other OS will be made available soon, e.g. CentOS and Fedora. Any contributions to provide support for your favorite distro are welcomed! Feel free to ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/fleek-network"},"open a PR")," in our repositories.")),(0,o.kt)("p",null,"Because of the use of Linux containerization technology, other operating systems, such as FreeBSD, OpenBSD, MacOS, Windows and others are not supported."),(0,o.kt)("p",null,"If you don\u2019t have a server or a spare machine, keep reading as we'll give you some hints on how to rent one, although we are not affiliated with any provider."),(0,o.kt)("h2",{id:"ports"},"Ports"),(0,o.kt)(i.ZP,{mdxType:"Ports"}),(0,o.kt)("h2",{id:"specs"},"Specs"),(0,o.kt)("hr",null),(0,o.kt)("p",null,"The Fleek Network node binary is only supported on CPUs that adhere to the x86_64 architecture (64-bit)."),(0,o.kt)("p",null,"A minimum of 32 GB of memory is required and a reasonable amount of disk space for the installation and running processes, which at the minimum should be around 20 GB."),(0,o.kt)(a.Z,{name:"Helder Oliveira",image:"https://github.com/heldrida.png",title:"Software Developer + DX",url:"https://github.com/heldrida",mdxType:"Author"}))}m.isMDXComponent=!0}}]);
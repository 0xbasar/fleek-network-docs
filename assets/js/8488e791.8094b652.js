"use strict";(self.webpackChunkdocta=self.webpackChunkdocta||[]).push([[282],{3905:(e,r,t)=>{t.d(r,{Zo:()=>d,kt:()=>k});var o=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,o,n=function(e,r){if(null==e)return{};var t,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var i=o.createContext({}),s=function(e){var r=o.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},d=function(e){var r=s(e.components);return o.createElement(i.Provider,{value:r},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return o.createElement(o.Fragment,{},r)}},m=o.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(t),m=n,k=p["".concat(i,".").concat(m)]||p[m]||u[m]||a;return t?o.createElement(k,c(c({ref:r},d),{},{components:t})):o.createElement(k,c({ref:r},d))}));function k(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,c=new Array(a);c[0]=m;var l={};for(var i in r)hasOwnProperty.call(r,i)&&(l[i]=r[i]);l.originalType=e,l[p]="string"==typeof e?e:n,c[1]=l;for(var s=2;s<a;s++)c[s]=t[s];return o.createElement.apply(null,c)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9940:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var o=t(7462),n=(t(7294),t(3905));const a={template:"post",draft:!1,hide_title:!1,title:"Docker compose build docker image from source",slug:"docker-compose-build-docker-image-from-source",date:new Date("2023-02-10T07:00:00.000Z"),canonical:"",description:"Quick reference on how to build the docker image from source",category:"Reference",tags:["Reference","docker compose","Fleek Network","build","latest","stack"]},c=void 0,l={unversionedId:"Docker/docker-compose-build-docker-image-from-source",id:"Docker/docker-compose-build-docker-image-from-source",title:"Docker compose build docker image from source",description:"Quick reference on how to build the docker image from source",source:"@site/reference/Docker/docker-compose-build-docker-image-from-source.md",sourceDirName:"Docker",slug:"/Docker/docker-compose-build-docker-image-from-source",permalink:"/reference/Docker/docker-compose-build-docker-image-from-source",draft:!1,editUrl:"https://github.com/fleek-network/fleek-network-docs/edit/main/reference/Docker/docker-compose-build-docker-image-from-source.md",tags:[{label:"Reference",permalink:"/reference/tags/reference"},{label:"docker compose",permalink:"/reference/tags/docker-compose"},{label:"Fleek Network",permalink:"/reference/tags/fleek-network"},{label:"build",permalink:"/reference/tags/build"},{label:"latest",permalink:"/reference/tags/latest"},{label:"stack",permalink:"/reference/tags/stack"}],version:"current",lastUpdatedAt:1683716533,formattedLastUpdatedAt:"May 10, 2023",frontMatter:{template:"post",draft:!1,hide_title:!1,title:"Docker compose build docker image from source",slug:"docker-compose-build-docker-image-from-source",date:"2023-02-10T07:00:00.000Z",canonical:"",description:"Quick reference on how to build the docker image from source",category:"Reference",tags:["Reference","docker compose","Fleek Network","build","latest","stack"]},sidebar:"defaultSidebar",previous:{title:"Disable docker iptables tampering",permalink:"/reference/Docker/disable-docker-iptables-tampering"},next:{title:"Docker compose use latest image instead of building",permalink:"/reference/Docker/docker-compose-use-latest-image-instead-of-building"}},i={},s=[],d={toc:s};function p(e){let{components:r,...t}=e;return(0,n.kt)("wrapper",(0,o.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"This is only useful if your ",(0,n.kt)("inlineCode",{parentName:"p"},"docker-compose.yml"),' is set to use the prebuilt docker image, e.g. the "ursa.image" is declared and has a remote address instead of having "ursa.build.context" and "build.context.dockerfile". You can see that our team provides "latest" builds based on the latest commits in the Ursa source-code ',(0,n.kt)("a",{parentName:"p",href:"https://github.com/fleek-network/ursa/pkgs/container/ursa"},"here"),", this works great for many servers but since we prebuild this image in a modern CPU, there are servers with old CPU where this fails, caused by a signal termination (SIGKIL 132, or exit code 4) when listing ",(0,n.kt)("inlineCode",{parentName:"p"},"docker ps -a"),"."),(0,n.kt)("p",null,"\ud83d\udca1 This is because you either have the ",(0,n.kt)("inlineCode",{parentName:"p"},"latest")," image declared in the ",(0,n.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," file for the ",(0,n.kt)("inlineCode",{parentName:"p"},"ursa")," service (quick process), or the local ",(0,n.kt)("inlineCode",{parentName:"p"},"Dockerfile"),", which requires to have it built (longer process). By default, located in ",(0,n.kt)("inlineCode",{parentName:"p"},"$HOME/fleek-network/ursa/docker/full-node/docker-compose.yml")),(0,n.kt)("p",null,"For this to work, ensure that the ",(0,n.kt)("inlineCode",{parentName:"p"},"Docker-compose.yml")," has the ",(0,n.kt)("inlineCode",{parentName:"p"},"build.context")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"build.dockerfile"),"."),(0,n.kt)("p",null,"Change directory to the location of the ursa source-code (by default ",(0,n.kt)("inlineCode",{parentName:"p"},"$HOME/fleek-network/ursa")," and open the file ",(0,n.kt)("inlineCode",{parentName:"p"},"$HOME/fleek-network/ursa/docker-full-node/docker-compose.yml")," in your favorite text editor)."),(0,n.kt)("p",null,"You'll find:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"  ursa:\n    image: ghcr.io/fleek-network/ursa:latest\n")),(0,n.kt)("p",null,'Change it, to include the missing "build" to look like the following:'),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"  ursa:\n    image: ursa\n    build:\n      context: ../../.\n      dockerfile: Dockerfile\n")),(0,n.kt)("p",null,"\ud83d\udca1 You can omit the ",(0,n.kt)("inlineCode",{parentName:"p"},"-f <path-to-config-file>")," by changing the directory to where the ",(0,n.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," file is e.g., ",(0,n.kt)("inlineCode",{parentName:"p"},"$HOME/fleek-network/ursa/docker/full-node")),(0,n.kt)("p",null,"Stop the Stack"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"docker compose -f ./docker/full-node/docker-compose.yml stop\n")),(0,n.kt)("p",null,"Remove stopped containers"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"docker compose -f ./docker/full-node/docker-compose.yml rm\n")),(0,n.kt)("p",null,"Start the Stack"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"docker compose -f ./docker/full-node/docker-compose.yml up\n")),(0,n.kt)("p",null,"Most users find that is enough to do (you have to restart the service)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"docker compose -f ./docker/full-node/docker-compose.yml pull\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"docker compose -f ./docker/full-node/docker-compose.yml up\n")),(0,n.kt)("p",null,"When starting the stack the image will be built from the source-code."))}p.isMDXComponent=!0}}]);
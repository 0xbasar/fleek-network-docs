"use strict";(self.webpackChunkdocta=self.webpackChunkdocta||[]).push([[4063],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,h=d["".concat(s,".").concat(m)]||d[m]||c[m]||i;return n?r.createElement(h,a(a({ref:t},u),{},{components:n})):r.createElement(h,a({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7906:(e,t,n)=>{n.d(t,{ZP:()=>l});var r=n(7462),o=(n(7294),n(3905));const i={toc:[{value:"Connection Pool (<code>4x00-4x09</code>)",id:"connection-pool-4x00-4x09",level:3},{value:"Consensus (<code>4x10-4x19</code>)",id:"consensus-4x10-4x19",level:3},{value:"Handshake (<code>4x20-4x29</code>)",id:"handshake-4x20-4x29",level:3},{value:"RPC (<code>4x30-4x39</code>)",id:"rpc-4x30-4x39",level:3},{value:"DHT (<code>4x40-4x49</code>)",id:"dht-4x40-4x49",level:3},{value:"Broadcast",id:"broadcast",level:3},{value:"Blockstore Server",id:"blockstore-server",level:3}]},a="wrapper";function l(e){let{components:t,...n}=e;return(0,o.kt)(a,(0,r.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Amongst other resources, ports play the role of managing and organizing network traffic. The ports initiate and terminate network connections crucial for the node to operate in the Fleek Network. The operating system should have the ports enabled and open for the node to run successfully."),(0,o.kt)("p",null,"We reserve the following top level ranges:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"TCP: ",(0,o.kt)("inlineCode",{parentName:"li"},"4200-4299")),(0,o.kt)("li",{parentName:"ul"},"UDP: ",(0,o.kt)("inlineCode",{parentName:"li"},"4300-4399"))),(0,o.kt)("p",null,"Each service in the node has 10 ports reserved within each range."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"For node operators, they can either choose to individually open up the assigned ports, or just open the top level ranges, at their discretion. But we reserve the full ranges for future use, so they should avoid any port conflicts with other software running on the node.")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"For the Node Operators who opt to run the ",(0,o.kt)("inlineCode",{parentName:"p"},"get.fleek.network")," assisted installer, the ports are verified if in use.")),(0,o.kt)("p",null,"The Node process requires the following ports:"),(0,o.kt)("h3",{id:"connection-pool-4x00-4x09"},"Connection Pool (",(0,o.kt)("inlineCode",{parentName:"h3"},"4x00-4x09"),")"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Netkit QUIC: ",(0,o.kt)("inlineCode",{parentName:"li"},"4300 (UDP)"))),(0,o.kt)("h3",{id:"consensus-4x10-4x19"},"Consensus (",(0,o.kt)("inlineCode",{parentName:"h3"},"4x10-4x19"),")"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Mempool: ",(0,o.kt)("inlineCode",{parentName:"li"},"4210 (TCP)")),(0,o.kt)("li",{parentName:"ul"},"Primary: ",(0,o.kt)("inlineCode",{parentName:"li"},"4310 (UDP)")),(0,o.kt)("li",{parentName:"ul"},"Worker: ",(0,o.kt)("inlineCode",{parentName:"li"},"4311 (UDP)"))),(0,o.kt)("h3",{id:"handshake-4x20-4x29"},"Handshake (",(0,o.kt)("inlineCode",{parentName:"h3"},"4x20-4x29"),")"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"HTTP: ",(0,o.kt)("inlineCode",{parentName:"li"},"4220 (TCP)")),(0,o.kt)("li",{parentName:"ul"},"TCP: ",(0,o.kt)("inlineCode",{parentName:"li"},"4221 (TCP)")),(0,o.kt)("li",{parentName:"ul"},"WebRTC: ",(0,o.kt)("inlineCode",{parentName:"li"},"4320 (UDP)")),(0,o.kt)("li",{parentName:"ul"},"WebTransport: ",(0,o.kt)("inlineCode",{parentName:"li"},"4321 (UDP)"))),(0,o.kt)("h3",{id:"rpc-4x30-4x39"},"RPC (",(0,o.kt)("inlineCode",{parentName:"h3"},"4x30-4x39"),")"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"HTTP: ",(0,o.kt)("inlineCode",{parentName:"li"},"4230 (TCP)")),(0,o.kt)("li",{parentName:"ul"},"WebSocket / WebTransport?")),(0,o.kt)("h3",{id:"dht-4x40-4x49"},"DHT (",(0,o.kt)("inlineCode",{parentName:"h3"},"4x40-4x49"),")"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"UDP: ",(0,o.kt)("inlineCode",{parentName:"li"},"4340 (UDP)"))),(0,o.kt)("h3",{id:"broadcast"},"Broadcast"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Uses connection pool")),(0,o.kt)("h3",{id:"blockstore-server"},"Blockstore Server"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Uses connection pool")),(0,o.kt)("admonition",{title:"required",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"The ports should be freed before launching the node process. Any blockers or firewalls should be configured to enable the ports.")))}l.isMDXComponent=!0},3872:(e,t,n)=>{n.d(t,{Z:()=>o});var r=n(7294);const o=e=>{let{image:t,name:n,title:o,url:i,communityMember:a=!1}=e;return r.createElement("section",{className:"author_card"},r.createElement("div",null,r.createElement("span",{className:"avatar"},r.createElement("a",{href:i,target:"_blank",alt:n},r.createElement("img",{src:t,alt:n}))),r.createElement("div",null,r.createElement("span",{className:"name"},r.createElement("a",{href:i,target:"_blank",alt:n},n)),r.createElement("span",{className:"title"},o),r.createElement("span",{className:"discord"},a?"Join our community on":"Got questions? Find us on"," ",r.createElement("a",{href:"https://discord.gg/fleekxyz",target:"_blank"},"discord!")))))}},7159:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>p,toc:()=>d});var r=n(7462),o=(n(7294),n(3905)),i=n(3872),a=n(7906);const l={title:"Requirements",hide_title:!0,description:"The requirements for the server specifications on which the Fleek Network Node can be installed and run.",tags:["requirements","server"],sidebarCollapsible:!1},s=void 0,p={unversionedId:"node/requirements",id:"node/requirements",title:"Requirements",description:"The requirements for the server specifications on which the Fleek Network Node can be installed and run.",source:"@site/docs/node/requirements.md",sourceDirName:"node",slug:"/node/requirements",permalink:"/docs/node/requirements",draft:!1,tags:[{label:"requirements",permalink:"/docs/tags/requirements"},{label:"server",permalink:"/docs/tags/server"}],version:"current",frontMatter:{title:"Requirements",hide_title:!0,description:"The requirements for the server specifications on which the Fleek Network Node can be installed and run.",tags:["requirements","server"],sidebarCollapsible:!1},sidebar:"docs",previous:{title:"Overview",permalink:"/docs/node/overview"},next:{title:"Testnet onboarding",permalink:"/docs/node/testnet-onboarding"}},u={},d=[{value:"Requirements",id:"requirements",level:2},{value:"Server",id:"server",level:2},{value:"Ports",id:"ports",level:2},{value:"Specs",id:"specs",level:2}],c={toc:d},m="wrapper";function h(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"requirements"},"Requirements"),(0,o.kt)("p",null,"This section provides the requirements for the server specifications on which the Fleek Network Node can be installed and run."),(0,o.kt)("admonition",{title:"warning",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Only 64-bits distributions are supported. Do not try to install it on a 32-bits operating system!")),(0,o.kt)("h2",{id:"server"},"Server"),(0,o.kt)("hr",null),(0,o.kt)("p",null,"The Fleek Network node binary is only supported by a Linux server. Currently, we are only providing support for the following distros:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Debian (>= 11)"),(0,o.kt)("li",{parentName:"ul"},"Ubuntu (>= 22.04 LTS)")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Support for other OS will be made available soon, e.g. CentOS and Fedora. Feel free to test running on older versions, but we reduce the number of versions to ease support and keep instructions less verbose, which should be easily translatable to your preferred OS Distro and Version. Any contributions to provide support for your favorite distro are welcomed! Feel free to ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/fleek-network"},"open a PR")," in our repositories.")),(0,o.kt)("p",null,"Because of the use of Linux containerization technology, other operating systems, such as FreeBSD, OpenBSD, MacOS, Windows and others are not supported."),(0,o.kt)("p",null,"If you don\u2019t have a server or a spare machine, keep reading as we'll give you some hints on how to rent one, although we are not affiliated with any provider."),(0,o.kt)("h2",{id:"ports"},"Ports"),(0,o.kt)(a.ZP,{mdxType:"Ports"}),(0,o.kt)("h2",{id:"specs"},"Specs"),(0,o.kt)("hr",null),(0,o.kt)("p",null,"The recommended number of CPU cores is a minimum of 4 with a minimum CPU speed of 2.0 GHz. The Fleek Network node binary is only supported on CPUs that adhere to the x86_64 architecture (64-bit)."),(0,o.kt)("p",null,"A minimum of 32 GB of memory (RAM) is required and a reasonable amount of disk space for the installation and running processes, which at the minimum should be around 20 GB."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"We're mainly supporting ",(0,o.kt)("inlineCode",{parentName:"p"},"GenuineIntel")," and there have been reports of failure to build the binary on ",(0,o.kt)("inlineCode",{parentName:"p"},"AMD"),". The ",(0,o.kt)("inlineCode",{parentName:"p"},"ARM64")," is a different architecture, thus not supported, but there has been some community contributions in that regard, find it in the reference ",(0,o.kt)("a",{parentName:"p",href:"/references/Lightning%20CLI/error-building-on-arm64"},"error building on ARM64"),".")),(0,o.kt)(i.Z,{name:"Helder Oliveira",image:"https://github.com/heldrida.png",title:"Software Developer + DX",url:"https://github.com/heldrida",mdxType:"Author"}))}h.isMDXComponent=!0}}]);
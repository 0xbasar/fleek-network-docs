"use strict";(self.webpackChunkdocta=self.webpackChunkdocta||[]).push([[1510],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=a,g=u["".concat(s,".").concat(d)]||u[d]||h[d]||o;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1409:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905)),o=n(3872);const i={title:"Backing up the keystore",slug:"backing-up-the-keystore",hide_title:!0,tags:["references","help","keystore","backup","restore"]},l=void 0,s={unversionedId:"Lightning CLI/keystore-backup",id:"Lightning CLI/keystore-backup",title:"Backing up the keystore",description:"The security of the private key is the responsibility of the user. Unfortunately, the Fleek Network team and any others are unable to help regain access to private key if lost or failed to secure them. The private keys are the user responsibility. The Fleek Network team doesn't endorse any methods of encryption and storage, the methods described here are for educational purposes only.",source:"@site/references/Lightning CLI/keystore-backup.md",sourceDirName:"Lightning CLI",slug:"/Lightning CLI/backing-up-the-keystore",permalink:"/references/Lightning CLI/backing-up-the-keystore",draft:!1,editUrl:"https://github.com/fleek-network/fleek-network-docs/edit/main/references/Lightning CLI/keystore-backup.md",tags:[{label:"references",permalink:"/references/tags/references"},{label:"help",permalink:"/references/tags/help"},{label:"keystore",permalink:"/references/tags/keystore"},{label:"backup",permalink:"/references/tags/backup"},{label:"restore",permalink:"/references/tags/restore"}],version:"current",lastUpdatedAt:1695386747,formattedLastUpdatedAt:"Sep 22, 2023",frontMatter:{title:"Backing up the keystore",slug:"backing-up-the-keystore",hide_title:!0,tags:["references","help","keystore","backup","restore"]},sidebar:"defaultSidebar",previous:{title:"Keys not found",permalink:"/references/Lightning CLI/keys-not-found"},next:{title:"Permission denied (os error 13)",permalink:"/references/Lightning CLI/permission-denied-os-error-13"}},p={},c=[{value:"Keystore pathname",id:"keystore-pathname",level:2},{value:"Configuration file settings",id:"configuration-file-settings",level:2},{value:"Loading the configuration file on runtime",id:"loading-the-configuration-file-on-runtime",level:2},{value:"Low security backup",id:"low-security-backup",level:2},{value:"Higher security",id:"higher-security",level:2}],u={toc:c},h="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(h,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"The security of the private key is the responsibility of the user. Unfortunately, the Fleek Network team and any others are unable to help regain access to private key if lost or failed to secure them. The private keys are the user responsibility. The Fleek Network team doesn't endorse any methods of encryption and storage, the methods described here are for educational purposes only.")),(0,a.kt)("h2",{id:"keystore-pathname"},"Keystore pathname"),(0,a.kt)("p",null,"The default location for the keystore is in the user home. The $HOME or ",(0,a.kt)("inlineCode",{parentName:"p"},"~")," refers to the user home, as such consider the logged in username."),(0,a.kt)("p",null,"To Check the user you are logged in with:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"whoami\n")),(0,a.kt)("p",null,"The default location for the keystore is:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"$HOME/.lightning/keystore\n")),(0,a.kt)("h2",{id:"configuration-file-settings"},"Configuration file settings"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"config.toml")," should have some and more of the following properties and values that are used to locate crucial files, such as the consensus and node keys of the keystore."),(0,a.kt)("p",null,"Here's an incomplete example of how the ",(0,a.kt)("inlineCode",{parentName:"p"},"config.toml")," looks like:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'[BLANK]\n...\n\n[application]\ndb_path = "~/.lightning/data/app_db"\n...\n\n[consensus]\nstore_path = "~/.lightning/data/narwhal_store"\n...\n\n[fsstore]\nroot = "~/.lightning/blockstore"\n...\n\n[resolver]\nstore_path = "~/.lightning/data/resolver_store"\n...\n\n[signer]\nconsensus_key_path = "~/.lightning/keystore/consensus.pem"\nnode_key_path = "~/.lightning/keystore/node.pem"\n...\n')),(0,a.kt)("p",null,"If you've followed the installation recommendations, it's very likely that you'll have the username path defined at the base of the pathnames declared in the properties, such as the following except instead of ",(0,a.kt)("inlineCode",{parentName:"p"},"<USERNAME>")," you'll have your username:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'[signer]\nconsensus_key_path = "/home/<USERNAME>/.lightning/keystore/consensus.pem"\nnode_key_path = "/home/<USERNAME>/.lightning/keystore/node.pem"\n')),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"config.toml")," if loaded on Lightning node process runtime, will pick the desired paths declared in the file."),(0,a.kt)("h2",{id:"loading-the-configuration-file-on-runtime"},"Loading the configuration file on runtime"),(0,a.kt)("p",null,"Use the configuration flag ",(0,a.kt)("inlineCode",{parentName:"p"},"-c")," to pass the configuration ",(0,a.kt)("inlineCode",{parentName:"p"},"config.toml")," path:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"lgtn -c /home/<USERNAME>/.lightning/config.toml run\n")),(0,a.kt)("p",null,"Replace the ",(0,a.kt)("inlineCode",{parentName:"p"},"<USERNAME>")," with the correct username, where the config is located."),(0,a.kt)("p",null,"Executing the subcommand ",(0,a.kt)("inlineCode",{parentName:"p"},"run")," without the configuration flag ",(0,a.kt)("inlineCode",{parentName:"p"},"-c"),", doesn't mean that it'll locate the desired ",(0,a.kt)("inlineCode",{parentName:"p"},"config.toml"),", as it'll default to ",(0,a.kt)("inlineCode",{parentName:"p"},"$HOME/.lightning/config.toml"),", e.g. if you were logged in with ",(0,a.kt)("strong",{parentName:"p"},"root"),", that'd be ",(0,a.kt)("inlineCode",{parentName:"p"},"/root/.lightning/config.toml"),"."),(0,a.kt)("h2",{id:"low-security-backup"},"Low security backup"),(0,a.kt)("p",null,"To zip and encrypto the ",(0,a.kt)("inlineCode",{parentName:"p"},"$HOME/.lightning/keystore")," directory run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"# It'll prompt for password (remember)\nzip --encrypt -r keystore.zip.enc $HOME/.lightning/keystore\n")),(0,a.kt)("p",null,"To unzip and decrypt the ",(0,a.kt)("inlineCode",{parentName:"p"},"keystore.zip.enc"),", you'd run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"# It'll prompt for password (recall)\nunzip keystore.zip.enc -d $HOME/.lightning/keystore\n")),(0,a.kt)("h2",{id:"higher-security"},"Higher security"),(0,a.kt)("p",null,"Create a ",(0,a.kt)("inlineCode",{parentName:"p"},"tarbar")," by executing:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'tar -cf "keystore.tar" $HOME/.lightning/keystore\n')),(0,a.kt)("p",null,"The encryption command is:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"sudo gpg -a --symmetric --cipher-algo AES256 keystore.tar\n")),(0,a.kt)("p",null,"To decrypt the ",(0,a.kt)("inlineCode",{parentName:"p"},"keystore.tar.asc")," file, enter:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"sudo gpg -a --output keystore.tar --decrypt keystore.tar.asc\n")),(0,a.kt)("p",null,"Create a temporary directory to extract the tar archive with the original full pathname."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"mkdir $HOME/tar_keystore_extract\n")),(0,a.kt)("p",null,"Now, run the command to extract to the target directory, as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"tar -xf keystore.tar -C $HOME/tar_keystore_extract\n")),(0,a.kt)("p",null,"Locate the extracted files in ",(0,a.kt)("inlineCode",{parentName:"p"},"$HOME/tar_keystore_extract"),", which should look like ",(0,a.kt)("inlineCode",{parentName:"p"},"$HOME/tar_keystore/home/<USERNAME>/.lightning/keystore")),(0,a.kt)("p",null,"For a more in depth or step-by-step instructions read the guide ",(0,a.kt)("a",{parentName:"p",href:"/guides/Node%20Operators/managing-the-keystore"},"managing the keystore"),"."),(0,a.kt)(o.Z,{name:"Helder Oliveira",image:"https://github.com/heldrida.png",title:"Software Developer + DX",url:"https://github.com/heldrida",mdxType:"Author"}))}d.isMDXComponent=!0},3872:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(7294);const a=e=>{let{image:t,name:n,title:a,url:o,communityMember:i=!1}=e;return r.createElement("section",{className:"author_card"},r.createElement("div",null,r.createElement("span",{className:"avatar"},r.createElement("a",{href:o,target:"_blank",alt:n},r.createElement("img",{src:t,alt:n}))),r.createElement("div",null,r.createElement("span",{className:"name"},r.createElement("a",{href:o,target:"_blank",alt:n},n)),r.createElement("span",{className:"title"},a),r.createElement("span",{className:"discord"},i?"Join our community on":"Got questions? Find us on"," ",r.createElement("a",{href:"https://discord.gg/fleekxyz",target:"_blank"},"discord!")))))}}}]);